{
  "Comment": "An example demonstrates how to ingest a large data set in Amazon S3 and partition it through aws Glue Crawlers, then execute Amazon Athena queries against that partition.",
  "StartAt": "Start Crawler",
  "States": {
    "Start Crawler": {
      "Type": "Task",
      "Next": "Get Crawler status",
      "Parameters": {
        "Name": "<GLUE_CRAWLER_NAME>"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler"
    },
    "Get Crawler status": {
      "Type": "Task",
      "Parameters": {
        "Name": "<GLUE_CRAWLER_NAME>"
      },
      "Resource": "arn:aws:arn:aws:states:::aws-sdk:glue:getCrawler",
      "Next": "Check Crawler status"
    },
    "Check Crawler status": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Crawler.State",
          "StringEquals": "RUNNING",
          "Next": "Wait"
        }
      ],
      "Default": "Start an Athena query"
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "Get Crawler status"
    },
    "Start an Athena query": {
      "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
      "Parameters": {
        "QueryString": "<ATHENA_QUERYSTRING>",
        "WorkGroup": "<ATHENA_WORKGROUP>"
      },
      "Type": "Task",
      "Next": "Get query results"
    },
    "Get query results": {
      "Resource": "arn:aws:states:::athena:getQueryResults",
      "Parameters": {
        "QueryExecutionId.$": "$.QueryExecution.QueryExecutionId"
      },
      "Type": "Task",
      "Next": "Send query results"
    },
    "Send query results": {
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "<SNS_TOPIC_ARN>",
        "Message": {
          "Input.$": "$.ResultSet.Rows"
        }
      },
      "Type": "Task",
      "End": true
    }
  }
}
